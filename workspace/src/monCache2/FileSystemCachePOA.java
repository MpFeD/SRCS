package monCache2;


/**
* monCache2/FileSystemCachePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from monCache2.idl
* jeudi 24 mars 2016 18 h 08 CET
*/

public abstract class FileSystemCachePOA extends org.omg.PortableServer.Servant
 implements monCache2.FileSystemCacheOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("lireM", new java.lang.Integer (0));
    _methods.put ("ecrireM", new java.lang.Integer (1));
    _methods.put ("majCache", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // monCache2/FileSystemCache/lireM
       {
         String ref = monCache2.ReferenceHelper.read (in);
         org.omg.CORBA.StringHolder data = new org.omg.CORBA.StringHolder ();
         boolean $result = false;
         try {
			$result = this.lireM (ref, data);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
         out = $rh.createReply();
         out.write_boolean ($result);
         monCache2.DonneeHelper.write (out, data.value);
         break;
       }

       case 1:  // monCache2/FileSystemCache/ecrireM
       {
         String ref = monCache2.ReferenceHelper.read (in);
         String data = monCache2.DonneeHelper.read (in);
         boolean $result = false;
         try {
			$result = this.ecrireM (ref, data);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // monCache2/FileSystemCache/majCache
       {
         String ref = monCache2.ReferenceHelper.read (in);
         String data = monCache2.DonneeHelper.read (in);
         boolean $result = false;
         try {
			$result = this.majCache (ref, data);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:monCache2/FileSystemCache:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public FileSystemCache _this() 
  {
    return FileSystemCacheHelper.narrow(
    super._this_object());
  }

  public FileSystemCache _this(org.omg.CORBA.ORB orb) 
  {
    return FileSystemCacheHelper.narrow(
    super._this_object(orb));
  }


} // class FileSystemCachePOA
